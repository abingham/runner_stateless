
Idea is to create tar.gz file in memory and save that directly
to /tmp on the host and then simply cat the tar.gz file into
the docker exec.

This should mean the filenames can be created with their
correct name directly (/sandbox/...) and not off tmp

The name of the created tar file needs to be unique to the specific
run invocation as it runs on the runner service.

The tar file created needs to be disposed of somehow or /tmp on
the host will fill up.

.........................

require ‘archive/tar/minitar’

src = {
  'foo.txt' => 'This is file foo',
  'bar.txt' => 'This is file bar',
}

File.open('test.tar', 'w') do |tarfile|
  Archive::Tar::Minitar::Writer.open(tarfile) do |tar|
    src.each do |filename, content|
      tar.add_file_simple(filename, :size => content.size, :mode => 0644) { |f|
        f.write(content)
      }
    end
  end
end

.........................

gem "gzipped_tar", "~> 0.1.1"

require 'gzipped_tar'
writer = GZippedTar::Writer.new
writer.add('file1.txt', 'hello world')
writer.add('file2.txt', 'goodbye world')
File.write('archive.tar.gz', writer.output)
