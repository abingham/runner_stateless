
On the tar-file-with-no-zipping branch
there is a client test failing.
I'm guessing this this is because files tar-piped
OUT of the container are not size-limited.
They should be.
How?

Found the failing test: api_test.rb 3DB
  run_cyber_dojo_sh({
    created_files: { 'big_file' => file('X'*1023*500) }
  })
  assert red?, result
This sends in a *big* file which is visible to create_text_file_tar_list.sh
and so an attempt to tar-pipe it back, unzipped, does occur...



the create_text_file_tar_list.sh could
o) get the size of each file
   how?
   stat -c%s "${filename}"
     Alpine. ok
     Ubuntu. ok
     Debian. ok
o) if it is too large...
   - truncate the file
     how?
     truncate -s ${SIZE} "${filename}"
       Alpine. ok
       Ubuntu. ok
       Debian. ok
   - add the filename to a 2nd file holding truncated filenames
     This 2nd file would be added to the 1st list...

Then once the files have been read tar-piped back from the
container into the host process, the 2nd file could be
used to set the correct truncation values.
